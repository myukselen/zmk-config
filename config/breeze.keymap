/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {

// Ref: https://zmkfirmware.dev/docs/codes/
// MYN: iteration 1: copy of QMK setup

// -----------------------------------------------------------------------------------------------------------------------------------
// | ESC/~ |  1  |  2  |  3   |  4   |  5   |                   |   6   |  7    |  8    |  9   |   0   | BSPC  | |  -  |  =   |  `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |   Y   |  U    |  I    |  O   |   P   |  [    | |  ]  |  \   | DEL  |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |   H   |  J    |  K    |  L   |   ;   |  '    | |     |  UP  |      |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |   N   |  M    |  ,    |  .   |   /   | SHIFT | |  L  |  DN  |  R   |
//                     | CTRL | ALT  | GUI  |  SPACE |  | ENTER | mo(2) | mo(1) |       |
                        bindings = <
&gresc    &kp N1 &kp N2 &kp N3    &kp N4   &kp N5                     &kp N6   &kp N7   &kp N8    &kp N9  &kp N0   &kp BSPC   &kp MINUS &kp EQUAL  &kp GRAVE
&kp TAB   &kp Q  &kp W  &kp E     &kp R    &kp T                      &kp Y    &kp U    &kp I     &kp O   &kp P    &kp LBKT   &kp RBKT  &kp BSLH   &kp DEL
&kp LCTRL &kp A  &kp S  &kp D     &kp F    &kp G                      &kp H    &kp J    &kp K     &kp L   &kp SEMI &kp APOS             &kp UP 
&kp LSHFT &kp Z  &kp X  &kp C     &kp V    &kp B                      &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT  &kp LEFT  &kp DOWN  &kp RIGHT
                        &kp LCTRL &kp LALT &kp LGUI &kp SPACE &kp RET &mo 2    &mo 1    &none
                        >;
                };

                layer1 {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// | RESET |  F1   |  F2   |  F3   |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  | F11   | | Mute | Vol- | Vol+ | 
// | BTCLR | BT1   | BT2   |  BT3  |  BT4 |  BT5 |                   |      |       |       |      |       | F12   | | Prev | Play | Next | 
// | OUT T | PWRON | PWROF | PWR T |      |      |                   |      | SCR-  | SCR+  |      |       |       | |      |      |      | 
// |       |       |       |       |      |      |                   |      |       |       |      |       |       | |      |      |      | 
//                         |       |      |      |        |  |       |      |       |       |
                        bindings = <
&reset       &kp F1           &kp F2            &kp F3            &kp F4       &kp F5                           &kp F6 &kp F7       &kp F8       &kp F9 &kp F10 &kp F11 &kp C_MUTE   &kp C_VOL_DN     &kp C_VOL_UP 
&bt BT_CLR   &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                     &trans &trans       &trans       &trans &trans  &kp F12 &kp C_PREV   &kp C_PLAY_PAUSE &kp C_NEXT    
&out OUT_TOG &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans                           &trans &kp C_BRI_DN &kp C_BRI_UP &trans &trans  &trans               &trans 
&trans       &trans           &trans            &trans            &trans       &trans                           &trans &trans       &trans       &trans &trans  &trans  &trans       &trans           &trans 
                                                &trans            &trans       &trans        &trans   &trans    &trans &trans       &trans                  
                        >;
                };

                layer2 {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |       |     |     |      |      |      |                   |      |   =   |   /   |  *   |   -   | DEL   | |     |      |      | 
// |       |     |     |      |      |      |                   |      |   7   |   8   |  9   |   +   |       | |     |      |      | 
// |       |     |     |      |      |      |                   |      |   4   |   5   |  6   |       |       | |     |      |      | 
// |       |     |     |      |      |      |                   | NUM  |   1   |   2   |  3   |       |       | |     |      |      | 
//                     |      |      |      |        |  | N.ENT |      |   0   |   .   |
                        bindings = <
&trans    &trans &trans &trans  &trans  &trans                             &trans      &kp KP_EQUAL &kp KP_SLASH &kp KP_MULTIPLY &kp KP_MINUS &kp DEL   &trans    &trans    &trans 
&trans    &trans &trans &trans  &trans  &trans                             &trans      &kp KP_N7    &kp KP_N8    &kp KP_N9       &kp KP_PLUS  &trans    &trans    &trans    &trans 
&trans    &trans &trans &trans  &trans  &trans                             &trans      &kp KP_N4    &kp KP_N5    &kp KP_N6       &trans       &trans              &trans 
&trans    &trans &trans &trans  &trans  &trans                             &kp KP_NUM  &kp KP_N1    &kp KP_N2    &kp KP_N3       &trans       &trans    &trans    &trans    &trans 
                        &trans  &trans  &trans    &trans   &kp KP_ENTER    &trans      &kp KP_N0    &kp KP_DOT
                        >;
                };
        };
};